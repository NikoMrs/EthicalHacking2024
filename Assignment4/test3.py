from Crypto.Util.number import long_to_bytes, bytes_to_long

rsa_n = 135225184797352238956993252284290353963628555230609411331511579550581414665636061957438738067330864251572269029201241285142988911575674611843767430873577205717882073494901661588940787272851100218353509387874111023865399990018460435399917751526038182264491743674852523720465579662692140940284835579809428254867
rsa_e = 65537
rsa_d = 52111742485037889239632903240795843259615221796912756039926399638822103678766259987443318562468655988795782940957116589065281107630120969783880712180036701694226345826970040315623060661606716946939672482207627604466639683281278498223391603914187707199287118698840462523582992956328913525723035521093194955201

FLAG = b"UniTN{placeholder_flag}"
c = pow(bytes_to_long(FLAG), rsa_e, rsa_n)
print("c:", c)

c_a = pow(2, rsa_e, rsa_n)

# Moltiplicazione del testo cifrato per 2
c_b = c_a*c
print("c_b:", c_b)

# Decifratura del risultato ottenuto
m_b = pow(c_b, rsa_d, rsa_n)
print("m_b:", m_b)

# Divisione del messaggio decifrato per 2
m = (m_b // 2)
print("m:", m)
print("Decrypted message:", long_to_bytes(m))

